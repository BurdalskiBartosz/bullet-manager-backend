datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id           Int           @id @default(autoincrement())
  login        String        @unique
  email        String        @unique
  password     String
  token        Token[]
  privateTasks UserTask[]
  tasks        ProjectTask[] @relation("AssignedTasks")
  createdTasks ProjectTask[] @relation("CreatedTasks")
  comment      Comment[]
}

model Token {
  id     Int    @id @default(autoincrement())
  value  String @unique
  user   User   @relation(fields: [userId], references: [id])
  userId Int
}

model UserTask {
  id                Int      @id @default(autoincrement())
  title             String
  plannedFinishDate DateTime
  category          String?
  description       String?
  User              User?    @relation(fields: [userId], references: [id])
  userId            Int?
}

model ProjectTask {
  id                Int        @id @default(autoincrement())
  createdAt         DateTime   @default(now())
  plannedFinishDate DateTime
  user              User?      @relation("AssignedTasks", fields: [userId], references: [id])
  userId            Int
  createdBy         User?      @relation("CreatedTasks", fields: [createdById], references: [id])
  createdById       Int
  title             String
  description       String
  priority          Int
  inProgressTime    Int?
  activities        Activity[]
  comments          Comment[]
  tags              Tag[]
}

model Activity {
  id     Int          @id @default(autoincrement())
  task   ProjectTask? @relation(fields: [taskId], references: [id])
  taskId Int?
  type   String
}

model Comment {
  id      Int          @id @default(autoincrement())
  task    ProjectTask? @relation(fields: [taskId], references: [id])
  taskId  Int?
  date    DateTime
  user    User         @relation(fields: [userId], references: [id])
  userId  Int
  content String
}

model Tag {
  id     Int          @id @default(autoincrement())
  value  String
  task   ProjectTask? @relation(fields: [taskId], references: [id])
  taskId Int?
}

model Note {
  id Int @id @default(autoincrement())
}
