datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id           String        @id @default(uuid())
  login        String        @unique
  email        String        @unique
  password     String
  token        Token[]
  privateTasks UserTask[]
  tasks        ProjectTask[] @relation("AssignedTasks")
  createdTasks ProjectTask[] @relation("CreatedTasks")
  comment      Comment[]
  Category     Category[]
}

model Token {
  id     String @id @default(uuid())
  value  String @unique
  user   User   @relation(fields: [userId], references: [id])
  userId String
}

model UserTask {
  id                String     @id @default(uuid())
  title             String
  plannedFinishDate DateTime
  description       String?
  user              User?      @relation(fields: [userId], references: [id])
  userId            String
  categories        Category[]
  priority          String     @default("1")
}

model Category {
  id        String     @id @default(uuid())
  name      String
  user      User       @relation(fields: [userId], references: [id])
  userId    String
  userTasks UserTask[]

}

model ProjectTask {
  id                String     @id @default(uuid())
  createdAt         DateTime   @default(now())
  plannedFinishDate DateTime
  user              User?      @relation("AssignedTasks", fields: [userId], references: [id])
  userId            String
  createdBy         User?      @relation("CreatedTasks", fields: [createdById], references: [id])
  createdById       String
  title             String
  description       String
  priority          Int
  inProgressTime    Int?
  activities        Activity[]
  comments          Comment[]
  tags              Tag[]
}

model Activity {
  id     String       @id @default(uuid())
  task   ProjectTask? @relation(fields: [taskId], references: [id])
  taskId String?
  type   String
}

model Comment {
  id      String       @id @default(uuid())
  task    ProjectTask? @relation(fields: [taskId], references: [id])
  taskId  String?
  date    DateTime
  user    User         @relation(fields: [userId], references: [id])
  userId  String
  content String
}

model Tag {
  id     Int          @id @default(autoincrement())
  value  String
  task   ProjectTask? @relation(fields: [taskId], references: [id])
  taskId String?
}

model Note {
  id Int @id @default(autoincrement())
}
